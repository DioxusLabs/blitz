[package]
name = "mini-dxn"
description = "Mini Dioxus Native for testing Blitz"
documentation = "https://docs.rs/mini-dxn"
version = "0.0.0"
license.workspace = true
homepage.workspace = true
repository.workspace = true
categories.workspace = true
edition.workspace = true
# This crate is only for internal use when developing Blitz.
# The main dioxus-native crate lives in the Dioxus repo.
publish = false

[features]
default = ["accessibility", "hot-reload", "tracing", "net", "svg", "gpu"]
svg = ["blitz-dom/svg", "blitz-paint/svg"]
net = ["dep:tokio", "dep:blitz-net"]
accessibility = ["blitz-shell/accessibility", "blitz-dom/accessibility"]
autofocus = ["blitz-dom/autofocus"]
tracing = ["dep:tracing", "blitz-shell/tracing", "blitz-dom/tracing"]
hot-reload = ["dep:dioxus-cli-config", "dep:dioxus-devtools"]
gpu = ["dep:anyrender_vello", "dep:wgpu"]
cpu = ["cpu-pixels"]
cpu-pixels = ["cpu-base", "anyrender_vello_cpu/pixels_window_renderer"]
cpu-softbuffer = ["cpu-base", "anyrender_vello_cpu/softbuffer_window_renderer"]
cpu-base = ["dep:anyrender_vello_cpu"]

[dependencies]
# Blitz dependencies
anyrender = { workspace = true }
anyrender_vello = { workspace = true, optional = true }
anyrender_vello_cpu = { workspace = true, features = ["multithreading", "pixels_window_renderer"], optional = true }
blitz-paint = { workspace = true }
blitz-dom =  { workspace = true }
blitz-net = { workspace = true, optional = true }
blitz-traits = { workspace = true }
blitz-shell =  { workspace = true }

# DioxusLabs dependencies
dioxus-core = { workspace = true }
dioxus-html = { workspace = true }
dioxus-hooks = { workspace = true }
dioxus-cli-config = { workspace = true, optional = true }
dioxus-devtools = { workspace = true, optional = true }

# Windowing & Input
winit = { workspace = true }
keyboard-types = { workspace = true }
wgpu = { workspace = true, optional = true }

# IO & Networking
tokio = { workspace = true, features = ["rt-multi-thread"], optional = true }

# Other dependencies
tracing = { workspace = true, optional = true }
rustc-hash = { workspace = true }
futures-util = { workspace = true }



[package.metadata.docs.rs]
all-features = true
rustdoc-args = ["--cfg", "docsrs"]
